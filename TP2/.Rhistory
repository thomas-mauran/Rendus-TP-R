temps_average
# temps_montpellier <-subset(temps_average, city == "Montpellier")
temps_montpellier <-subset(temps_average, city == "Montpellier")
temps_montpellier <-subset(temps_average, city == "Montpellier")
temps_montpellier <-subset(temps_average, city == "Montpellier")
head(temps_montpellier)
mean(temps_montpellier$temperature)
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2020-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]
min_day <- temps_montpellier[which.min(temps_montpellier$temperature)]
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day)
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2022-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2005-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2003-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2002-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2001-01-01")
temps_montpellier <-subset(temps_average, city == "Montpellier")
temps_montpellier
mean(temps_montpellier$temperature)
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2001-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2022-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2023-01-01")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2020-01-01")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2023-01-01")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2022-01-01")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2021-01-01")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2020-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2020-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2023-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date("2023-01-01", "%Y-%m-%d") + as.difftime(which.max(temps_montpellier$temperature) - 1, units="days")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date("2023-01-01", "%Y-%m-%d") + as.difftime(which.max(temps_montpellier$temperature) - 1, units="days")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2020-01-01")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2023-01-01")
min_day <- temps_montpellier[which.min(temps_montpellier$temperature),]$day_of_year
as.Date(min_day, origin="2020-01-01")
max_day <- temps_montpellier[which.max(temps_montpellier$temperature),]$day_of_year
as.Date(max_day, origin="2020-01-01")
ggplot(temps_montpellier,
aes(
x = day_of_year,
y = temperature )) +
geom_line(size = 1) +
theme_dark()
ggplot(temps_montpellier,
aes(
x = day_of_year,
y = temperature )) +
geom_line(size = 1) +
theme_classic()
ggplot(temps_montpellier, aes(x = day_of_year, y = temperature )) +
geom_line(size = 2, linetype = "dashed", color="red") +
theme_light()
ggplot(temps_montpellier,
aes(
x = day_of_year,
y = temperature )) +
geom_line(size = 1, linetype = "dashed", color="orange") +
theme_light()
ggplot(temps_montpellier,
aes(
x = day_of_year,
y = temperature )) +
geom_line(size = 1, linetype = "longdash", color="orange") +
theme_light()
ggplot(temps_montpellier,
aes(
x = day_of_year,
y = temperature )) +
geom_line(size = 1, linetype = "dotted", color="orange") +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city)) +
geom_line(size = 1) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
linetype = city)) +
geom_line(size = 1) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city)) +
geom_line(size = 1) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = city,
color = temperature)) +
geom_point(size = 5) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = city,
color = temperature)) +
geom_point(size = 7) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = city,
color = temperature)) +
geom_point(size = 20) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = city,
color = temperature)) +
geom_point(size = 10) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = city,
color = temperature)) +
geom_point(size = 7) +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city,
linetype = city )) +
geom_line(size = 1) +
theme_light()
ggplot(temps_average, ]
ggplot(temps_average, ]
ggplot(temps_average, ]
ggplot(temps_average,
aes(
y = day_of_year,
x = city,
color = temperature)) +
geom_point(size = 5) +
theme_light()
ggplot(temps_average,
aes(
x = city,
y = day_of_year,
color = temperature)) +
geom_point(size = 5) +
theme_light()
ggplot(temps_average,
aes(
x = city,
y = day_of_year,
color = temperature)) +
geom_point(size = 7) +
theme_light()
ggplot(temps_montpellier,
aes(
x = day_of_year,
y = temperature )) +
geom_line(size = 1, linetype = "dotted", color="orange") +
theme_classic()
ggplot(temps_montpellier,
aes(
x = day_of_year,
y = temperature )) +
geom_line(size = 1, linetype = "dotted", color="orange") +
theme_light()
ggplot(temps_average,
aes(
x = city,
y = day_of_year,
color = temperature)) +
geom_point(size = 7) +
theme_light()
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
theme_light()
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
scale_x_continuous(breaks = 1:12, labels = c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")) +
theme_light()
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light()
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light() +
theme(axis.text.x = element_text(angle = -90, vjust = 0.5))
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light() +
theme(axis.text.x = element_text(angle = 30, vjust = 0.5))
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light() +
theme(axis.text.x = element_text(angle = -30, vjust = 0.5))
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1) +
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light(color= "orange") +
theme(axis.text.x = element_text(angle = -30, vjust = 0.5))
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1, color= "orange") +
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light() +
theme(axis.text.x = element_text(angle = -30, vjust = 0.5))
listeDesMois <- c("Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre")
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1, color= "orange") +
ggtitle("Graphe donnant le mois en fonction du jour de l'année.")+
scale_x_continuous(breaks = 1:12, labels = listeDesMois) +
theme_light() +
theme(axis.text.x = element_text(angle = -30, vjust = 0.5))
ggplot(temps_average,
aes(
x = city,
y = day_of_year,
color = temperature)) +
geom_point(size = 7) +
ggtitle("Températures en color, représentées verticalement") +
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city,
linetype = city )) +
geom_line(size = 1) +
ggtitle("Températures en y, avec une couleur et un type de ligne différent pour chaque ville")
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city,
linetype = city )) +
geom_line(size = 1) +
ggtitle("Températures en y, avec une couleur et un type de ligne différent pour chaque ville")
theme_light()
ggplot(temps_average, aes(x = day_of_year, y = temperature, color = factor(month))) +
geom_line(aes(linetype = city), size = 1) +
scale_color_brewer(palette = "Set1") +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = month)) +
geom_line(aes(linetype = city), size = 1) +
scale_color_brewer(palette = "Set1") +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
geom_line(aes(linetype = city), size = 1) +
scale_color_brewer(palette = "Set1") +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1, color= "orange") +
ggtitle("Graphe donnant le mois en fonction du jour de l'année")+
scale_x_continuous(breaks = 1:12, labels = month.name) +
theme_light() +
theme(axis.text.x = element_text(angle = -30, vjust = 0.5))
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville, et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville\n, et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville,\n et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average,
aes(
x = city,
y = day_of_year,
color = temperature)) +
geom_point(size = 7) +
ggtitle("Températures en color, représentées verticalement") +
theme_light()
ggplot(temps_average,
aes(
x = city,
y = day_of_year,
color = temperature)) +
geom_point(size = 7) +
labs(x = "Ville", y = "Jours de l'année", color = "Températures") +
ggtitle("Températures en color, représentées verticalement") +
theme_light()
ggplot(temps_average,
aes(
y = day_of_year,
x = month, )) +
geom_line(size = 1, color= "orange") +
ggtitle("Graphe donnant le mois en fonction du jour de l'année")+
scale_x_continuous(breaks = 1:12, labels = month.name) +
labs(x = "Mois", y = "Jours de l'année") +
theme_light() +
theme(axis.text.x = element_text(angle = -30, vjust = 0.5))
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city,
linetype = city )) +
geom_line(size = 1) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Ville") +
ggtitle("Températures en y, avec une couleur et un type de ligne différent pour chaque ville")
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city,
linetype = city )) +
geom_line(size = 1) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Ville", linetype= "Ville") +
ggtitle("Températures en y, avec une couleur et un type de ligne différent pour chaque ville")
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city,
linetype = city )) +
geom_line(size = 1) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Villes", linetype= "Villes") +
ggtitle("Températures en y, avec une couleur et un type de ligne différent pour chaque ville")
theme_light()
ggplot(temps_average,
aes(
x = day_of_year,
y = temperature,
color = city,
linetype = city )) +
geom_line(size = 1) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Villes", linetype= "Villes") +
ggtitle("Températures en y, avec une couleur et un type de ligne différent\n pour chaque ville")
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville,\n et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville,\n et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "triangle", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville,\n et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "triangled", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville,\n et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "triangles", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
ggplot(temps_average, aes(
x = day_of_year,
y = temperature,
color = factor(month))) +
ggtitle("Températures en y, un type de ligne différent pour chaque ville,\n et une couleur pour chaque mois") +
geom_line(aes(linetype = city), size = 1)  +
scale_linetype_manual(values = c("solid", "dashed", "dotted")) +
labs(x = "Jour de l'année", y = "Température (°C)", color = "Mois") +
scale_color_discrete(labels = month.name) +
theme_light()
library(here)
library(ggplot2)
temps_average <- read.csv(file = here("temp_average.csv"))
here()
